// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  hashedPassword String?
  emailVerified  DateTime?
  image          String?
  type           String    @default("init")
  accounts       Account[]
  sessions       Session[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Startup {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  email          String           @unique
  name           String
  industry       String
  industrySector String[]
  proposals      FundingProposal[]
  created        DateTime         @default(now())
  updated        DateTime         @updatedAt
}

model Investor {
  id                    String                 @id @default(auto()) @map("_id") @db.ObjectId
  email                 String                 @unique
  fundName              String
  location              String
  logo                  Json?
  website               String?
  investmentFocus       String[]
  investmentOpportunities InvestmentOpportunity[]
  created               DateTime               @default(now())
  updated               DateTime               @updatedAt
}

model InvestmentOpportunity {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  description     String
  fundingAmount   Float
  status          String           @default("seekingFunding")
  deadline        DateTime?
  fundingType     String           @default("")
  requirements    String           @default("")
  industrySector  String           @default("")
  location        String           @default("")
  investmentStage String           @default("")
  proposals       FundingProposal[]
  Investor        Investor?        @relation(fields: [investorId], references: [id], onDelete: Cascade)
  investorId      String?          @db.ObjectId
  created         DateTime         @default(now())
  updated         DateTime         @updatedAt
}

model FundingProposal {
  id                   String               @id @default(auto()) @map("_id") @db.ObjectId
  pitchDeck            String?
  fundingStatus        String?              @default("underReview")
  Startup              Startup?             @relation(fields: [startupId], references: [id], onDelete: Cascade)
  startupId            String?              @db.ObjectId
  InvestmentOpportunity InvestmentOpportunity? @relation(fields: [opportunityId], references: [id], onDelete: Cascade)
  opportunityId        String?              @db.ObjectId
  businessPlan         String               @default("")
  financials           String               @default("")
  teamInfo             String               @default("")
  Meetings             Meeting[]
  created              DateTime             @default(now())
  updated              DateTime             @updatedAt
}

model Meeting {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  Date              DateTime
  time              String
  timeDuration      Int
  note              String
  status            String          @default("")
  FundingProposal   FundingProposal? @relation(fields: [proposalId], references: [id], onDelete: Cascade)
  proposalId        String?         @db.ObjectId
  created           DateTime        @default(now())
  updated           DateTime        @updatedAt
}

model IndustrySectors {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  SubSector SubSector[]
}

model SubSector {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  IndustrySectors IndustrySectors? @relation(fields: [sectorId], references: [id], onDelete: Cascade)
  sectorId        String?          @db.ObjectId
}
